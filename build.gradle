plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id "com.palantir.docker" version "0.26.0" // Docker Gradle Plugin to build image
    id "com.palantir.docker-run" version "0.26.0" // Docker Gradle Plugin to run image
}

group = 'org.github.felipegutierrez.biddingsystem'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // metrics: micrometer + prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.6.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

sourceSets {
    test {
        java.srcDirs = ['src/test/java/unit', 'src/test/java/intg']
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

docker.dependsOn(jar)
docker {
    dependsOn jar
    name "${project.name}:${project.version}"
    files 'build/libs/biddingsystem-java-0.1.0.jar'
    // uri("${project.name}:".plus(version))
    copySpec.from("build").into("build")
    pull(true)
    setDockerfile(file("Dockerfile"))
    // tag 'DockerHub', "felipeogutierrez/biddingsystem-java:${project.version}"
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    arguments "-it"
    clean true
}
